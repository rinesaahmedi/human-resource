
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  username     String @unique
  passwordHash String
  role         String
}

model Employee {
  id           Int       @id @default(autoincrement())
  name         String
  contact      String?
  departmentId Int?
  roleId       Int?
  department   Department? @relation(fields: [departmentId], references: [id])
  role         Role?       @relation(fields: [roleId], references: [id])
  attendance   Attendance[]
  leaveRequest LeaveRequest[]
  payroll      Payroll[]
  review       Review[]
  task         Task[]
}

model Department {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  employees   Employee[]
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  permissions String?
  employees   Employee[]
}

model Attendance {
  id         Int      @id @default(autoincrement())
  employeeId Int
  date       DateTime
  status     String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model LeaveRequest {
  id         Int      @id @default(autoincrement())
  employeeId Int
  startDate  DateTime
  endDate    DateTime
  status     String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Payroll {
  id         Int      @id @default(autoincrement())
  employeeId Int
  basicSalary Float
  bonuses    Float?
  deductions Float?
  netPay     Float
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  employeeId Int
  reviewDate DateTime
  comments   String?
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Task {
  id              Int      @id @default(autoincrement())
  employeeId      Int
  taskDescription String
  dueDate         DateTime
  status          String
  employee        Employee @relation(fields: [employeeId], references: [id])
}

model Gara {
  id         Int     @id @default(autoincrement())
  emriGares  String
  llojiGares String
  ekipet     Ekipi[]
}

model Ekipi {
  id             Int    @id @default(autoincrement())
  emriEkipit     String
  numriPjestareve Int
  garaId         Int
  gara           Gara   @relation(fields: [garaId], references: [id])
}

